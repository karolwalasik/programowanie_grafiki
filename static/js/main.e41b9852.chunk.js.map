{"version":3,"sources":["App.js","index.js"],"names":["GridWrapper","styled","App","testMatrix","startMatrix","weightsMatrix64x64","Array","from","fill","undefined","React","useState","inputValue","setI","resultMatrix","setResult","inputAsArray","className","maxLength","value","onChange","e","target","onClick","map","Number","length","weights","matrix","console","log","i","j","calculateWeight","flat","result","multiply","el","inputMatrix","fi","style","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAMMA,EAAcC,YAAO,MAAPA,CAAH,kLA6FFC,MAtFf,WACI,IA2CIC,EA3CEC,EAAc,CAChB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAGfC,EAAoBC,MAAMC,KAAKD,MAAM,IAAIE,UAAKC,IAAY,kBAAM,IAAIH,MAAM,IAAIE,UAAKC,MA8BvF,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCH,IAAMC,SAAS,IAAhD,mBAAOG,EAAP,KAAoBC,EAApB,KAeMC,EAAY,YAAOJ,GAE3B,OACE,sBAAKK,UAAU,MAAf,UACI,gCACI,uBAAOC,UAAW,GAAIC,MAAOP,EAAYQ,SAlB1B,SAACC,GACpBR,EAAKQ,EAAEC,OAAOH,UAkBV,wBAAQI,QAhBI,WAEhB,GAAuB,MADvBpB,EAAW,YAAIS,GAAYY,KAAI,SAAAH,GAAC,OAAEI,OAAOJ,OAC3BK,OAAY,CAC1B,IAAMC,EApCV,SAAyBC,GACrBC,QAAQC,IAAI,IAAIF,EAAOF,QACvB,IAAI,IAAIK,EAAG,EAAEA,EAAE,GAAGA,IACd,IAAI,IAAIC,EAAE,EAAEA,EAAE,GAAGA,IACVD,IAAIC,EACH3B,EAAmB0B,GAAGC,GAAG,GAEzB3B,EAAmB0B,GAAGC,IAAM,EAAEJ,EAAOG,GAAG,IAAI,EAAEH,EAAOI,GAAG,GACxD3B,EAAmB2B,GAAGD,IAAM,EAAEH,EAAOG,GAAG,IAAI,EAAEH,EAAOI,GAAG,IAIpE,OAAO3B,EAwBU4B,CAAgB7B,EAAY8B,QAEvCC,EADIC,YAASjC,EAAWwB,GACbH,KAAI,SAACa,EAAGN,GAAJ,OAvBzB,SAAaM,EAAGN,EAAEO,GAEd,OADAT,QAAQC,IAAI,IAAIO,EAAGN,EAAEO,EAAYP,IAC9BM,EAAG,EACK,EACFA,EAAG,EACD,EAGAC,EAAYP,GAeMQ,CAAGF,EAAGN,EAAE5B,MACrCY,EAAUoB,KAUN,sBAEJ,wCACG/B,EAAYsB,QAAU,cAAC1B,EAAD,UACpBI,EAAY8B,OAAOV,KAAI,SAAAa,GAAE,OAAE,sBAAMG,MAAO,CAACC,MAAY,IAALJ,EAAS,MAAO,SAArC,SAAgDA,WAG7ErB,EAAaU,QAAS,yCAAG,qCACxB,cAAC1B,EAAD,UACKgB,EAAaQ,KAAI,SAAAa,GAAE,OAAE,sBAAMG,MAAO,CAACC,MAAY,IAALJ,EAAS,MAAO,SAArC,SAAgDA,cAI3EvB,EAAaY,QAAU,qCAAE,sCACxB,cAAC1B,EAAD,UACCc,EAAaU,KAAI,SAAAa,GAAE,OAAE,sBAAMG,MAAO,CAACC,MAAY,IAALJ,EAAS,MAAO,SAArC,SAAgDA,gBCtFlFK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e41b9852.chunk.js","sourcesContent":["import './App.css';\nimport styled from 'styled-components'\n\nimport { multiply } from 'mathjs'\nimport React from 'react';\n\nconst GridWrapper = styled('div')`\n  border:1px solid grey;\n  width: max-content;\n  display: grid;\n  grid-template-columns: repeat(8, 20px);\n  grid-template-rows: repeat(8, 20px);\n`\nfunction App() {\n    const startMatrix = [\n        [0,1,0,0,0,0,1,0],\n        [0,1,1,0,0,0,0,0],\n        [1,0,0,0,0,1,0,0],\n        [0,0,1,0,1,0,0,1],\n        [0,0,0,0,0,0,0,0],\n        [0,0,1,0,0,1,0,0],\n        [0,0,0,0,0,0,1,0],\n        [0,0,0,1,0,0,1,0],\n    ]\n\n    let weightsMatrix64x64 =Array.from(Array(64).fill(undefined), () => new Array(64).fill(undefined));\n    \n\n    function calculateWeight(matrix){\n        console.log('l',matrix.length)\n        for(let i =0;i<64;i++){\n            for(let j=0;j<64;j++){\n                if(i===j){\n                    weightsMatrix64x64[i][j]=0\n                }else{\n                    weightsMatrix64x64[i][j] = (2*matrix[i]-1)*(2*matrix[j]-1)\n                    weightsMatrix64x64[j][i] = (2*matrix[i]-1)*(2*matrix[j]-1)\n                }\n            }\n        }\n        return weightsMatrix64x64\n    }\n\n    function fi (el,i,inputMatrix){\n        console.log('e',el,i,inputMatrix[i])\n        if(el>0){\n            return 1\n        }else if(el<0){\n            return 0\n        }else{\n            //zwroc to co na wejsciu\n            return inputMatrix[i]\n        }\n    }\n    \n    const [inputValue,setI] = React.useState('')\n    const [resultMatrix,setResult] = React.useState([])\n    let testMatrix;\n    const handleSetInput = (e) => {\n        setI(e.target.value)\n    }\n    const handleClick = () =>{\n        testMatrix=[...inputValue].map(e=>Number(e));\n        if(testMatrix.length===64){\n        const weights = (calculateWeight(startMatrix.flat()))\n        const m = multiply(testMatrix,weights)\n        const result = m.map((el,i)=>fi(el,i,testMatrix));\n        setResult(result)\n        }\n    }\n\n    const inputAsArray = [...inputValue]\n    \n  return (\n    <div className=\"App\">\n        <div>\n            <input maxLength={64} value={inputValue} onChange={handleSetInput} />\n            <button onClick={handleClick}>click</button>\n        </div>\n        <p>start</p>\n        {!!startMatrix.length && <GridWrapper>\n            {startMatrix.flat().map(el=><span style={{color: el===1 ? 'red': 'black'}}>{el}</span>)}\n        </GridWrapper>}\n\n        {!!inputAsArray.length &&<> <p>test</p>\n            <GridWrapper>\n                {inputAsArray.map(el=><span style={{color: el===1 ? 'red': 'black'}}>{el}</span>)}\n            </GridWrapper>\n        </> }\n\n        {!!resultMatrix.length && <><p>wynik</p>\n            <GridWrapper>\n            {resultMatrix.map(el=><span style={{color: el===1 ? 'red': 'black'}}>{el}</span>)}\n        </GridWrapper></>}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}